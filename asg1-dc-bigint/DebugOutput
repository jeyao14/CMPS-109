90 30 / p
ydc: DEBUG(v) ubigint.cpp[362]    quo_rem udivide(const ubigint&, const ubigint&)
now multiplying
ydc: DEBUG(v) ubigint.cpp[368]    quo_rem udivide(const ubigint&, const ubigint&)
1divisor 60 power_of_2 2
ydc: DEBUG(v) ubigint.cpp[368]    quo_rem udivide(const ubigint&, const ubigint&)
1divisor 120 power_of_2 4
ydc: DEBUG(v) ubigint.cpp[371]    quo_rem udivide(const ubigint&, const ubigint&)
now dividing
ydc: DEBUG(v) ubigint.cpp[375]    quo_rem udivide(const ubigint&, const ubigint&)
2divisor 120 remainder 90
ydc: DEBUG(v) ubigint.cpp[330]    
div2: iteration 2
ydc: DEBUG(v) ubigint.cpp[336]    
div2: inserted 0
ydc: DEBUG(v) ubigint.cpp[330]    
div2: iteration 1
ydc: DEBUG(v) ubigint.cpp[336]    
div2: inserted 6
ydc: DEBUG(v) ubigint.cpp[330]    
div2: iteration 0
ydc: DEBUG(v) ubigint.cpp[336]    
div2: inserted 0
ydc: DEBUG(v) ubigint.cpp[340]    
div2: result 060
ydc: DEBUG(v) ubigint.cpp[345]    
div2: this 60
ydc: DEBUG(v) ubigint.cpp[330]    
div2: iteration 0
ydc: DEBUG(v) ubigint.cpp[336]    
div2: inserted 2
ydc: DEBUG(v) ubigint.cpp[340]    
div2: result 2
ydc: DEBUG(v) ubigint.cpp[345]    
div2: this 2
ydc: DEBUG(v) ubigint.cpp[388]    quo_rem udivide(const ubigint&, const ubigint&)
2divisor 60 power_of_2 2
ydc: DEBUG(v) ubigint.cpp[375]    quo_rem udivide(const ubigint&, const ubigint&)
2divisor 60 remainder 90
ydc: DEBUG(v) ubigint.cpp[379]    quo_rem udivide(const ubigint&, const ubigint&)
remainder = 90 - 60 quotient = 0 + 2
ydc: DEBUG(v) ubigint.cpp[383]    quo_rem udivide(const ubigint&, const ubigint&)
remainder = 30 quotient = 2
ydc: DEBUG(v) ubigint.cpp[330]    
div2: iteration 1
ydc: DEBUG(v) ubigint.cpp[336]    
div2: inserted 3
ydc: DEBUG(v) ubigint.cpp[330]    
div2: iteration 0
ydc: DEBUG(v) ubigint.cpp[336]    
div2: inserted 0
ydc: DEBUG(v) ubigint.cpp[340]    
div2: result 30
ydc: DEBUG(v) ubigint.cpp[345]    
div2: this 30
ydc: DEBUG(v) ubigint.cpp[330]    
div2: iteration 0
ydc: DEBUG(v) ubigint.cpp[336]    
div2: inserted 1
ydc: DEBUG(v) ubigint.cpp[340]    
div2: result 1
ydc: DEBUG(v) ubigint.cpp[345]    
div2: this 1
ydc: DEBUG(v) ubigint.cpp[388]    quo_rem udivide(const ubigint&, const ubigint&)
2divisor 30 power_of_2 1
ydc: DEBUG(v) ubigint.cpp[375]    quo_rem udivide(const ubigint&, const ubigint&)
2divisor 30 remainder 30
ydc: DEBUG(v) ubigint.cpp[379]    quo_rem udivide(const ubigint&, const ubigint&)
remainder = 30 - 30 quotient = 2 + 1
ydc: DEBUG(v) ubigint.cpp[383]    quo_rem udivide(const ubigint&, const ubigint&)
remainder = 0 quotient = 30
ydc: DEBUG(v) ubigint.cpp[330]    
div2: iteration 1
ydc: DEBUG(v) ubigint.cpp[336]    
div2: inserted 1
ydc: DEBUG(v) ubigint.cpp[330]    
div2: iteration 0
ydc: DEBUG(v) ubigint.cpp[336]    
div2: inserted 5
ydc: DEBUG(v) ubigint.cpp[340]    
div2: result 15
ydc: DEBUG(v) ubigint.cpp[345]    
div2: this 15
ydc: DEBUG(v) ubigint.cpp[330]    
div2: iteration 0
ydc: DEBUG(v) ubigint.cpp[336]    
div2: inserted 0
ydc: DEBUG(v) ubigint.cpp[340]    
div2: result 0
ydc: DEBUG(v) ubigint.cpp[345]    
div2: this
ydc: DEBUG(v) ubigint.cpp[388]    quo_rem udivide(const ubigint&, const ubigint&)
2divisor 15 power_of_2
30